from telegram.ext import CommandHandler, ConversationHandler, CallbackQueryHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

# Defining states
GREET, COOL, UNDERSTOOD, READY, LETSGO = range(5)

# Start command handler
async def start(update, context):
    keyboard = [[InlineKeyboardButton("–ü—Ä–∏–≤–µ—Ç", callback_data='greet')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –±–æ–ª—Ç–∞–Ω–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.', reply_markup=reply_markup)
    return GREET

# Greet handler
async def greet(update, context):
    query = update.callback_query
    await query.answer()
    await query.message.reply_text(text="–í—Å–µ–º –∫—Ç–æ –∏–∑—É—á–∞–µ—Ç —è–∑—ã–∫ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —è–∑—ã–∫–æ–≤–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏. –Ø –±—É–¥—É —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å. –ú–æ–∂–µ—à—å –≥–æ–≤–æ—Ä–∏—Ç—å —Å–æ –º–Ω–æ–π –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—å –∏ –Ω–∞ –ª—é–±—É—é —Ç–µ–º—É.")
    await query.message.reply_text("–ù–µ –±–æ–π—Å—è –¥–æ–ø—É—Å–∫–∞—Ç—å –æ—à–∏–±–∫–∏, –º—ã—á–∞—Ç—å, —Å–±–∏–≤–∞—Ç—å—Å—è —Å —Ç–µ–º—ã. –°–ø—Ä–∞—à–∏–≤–∞–π –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –ø–µ—Ä–µ—Å–ø—Ä–∞—à–∏–≤–∞–π, –ø—Ä–æ—Å–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å!")
    keyboard = [[InlineKeyboardButton("–ö—Ä—É—Ç–æ", callback_data='cool')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.message.reply_text("–£ –º–µ–Ω—è –∫—É—á–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ üôÇ", reply_markup=reply_markup)
    return COOL

# Cool handler
async def cool(update, context):
    query = update.callback_query
    await query.answer()
    await query.message.reply_text(text="–°—Ç–∞—Ä–∞–π—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
    await query.message.reply_text("–°—Ç—Ä–æ–π –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–∏–º–∏ —Ñ—Ä–∞–∑–∞–º–∏. –°–ª–µ–¥–∏ –∑–∞ —Å–≤–æ–∏–º –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ–º.")
    keyboard = [[InlineKeyboardButton("–ë—É–¥—É —Å—Ç–∞—Ä–∞—Ç—å—Å—è!", callback_data='understood')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.message.reply_text("–ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç —Ç–µ–±—è —Å–∞–º–æ–≥–æ!", reply_markup=reply_markup)
    return UNDERSTOOD

# Understood handler
async def understood(update, context):
    query = update.callback_query
    await query.answer()
    await query.message.reply_text(text="–õ–∞–¥–Ω–æ –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö. –ù–æ –∏—Ö –ª—É—á—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.")
    await query.message.reply_text("/new - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä.\n/topics - –≤—ã–±—Ä–∞—Ç—å –∫–∞–∫—É—é-—Ç–æ —Ç–µ–º—É.\n/dict –°–ª–æ–≤–æ - –°–ø—Ä–æ—Å–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞.")
    await query.message.reply_text("–ü–æ—è—Å–Ω—é")
    await query.message.reply_text("–•–æ—á–µ—à—å –Ω–æ–≤—É—é —Ç–µ–º—É - —Ç–∞–∫ –∏ —Å–∫–∞–∂–∏ Let's talk about the idea of an infinite universe")
    keyboard = [[InlineKeyboardButton("–í—Å–µ —É–∂–µ —è—Å–Ω–æ, –º–æ–∂–µ—Ç –Ω–∞—á–Ω–µ–º", callback_data='ready')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.message.reply_text("–ù–µ –∑–Ω–∞–µ—à—å —Å–ª–æ–≤–æ? –°–∫–∞–∂–∏ I don't know the word 'infinite', could you explain it to me?", reply_markup=reply_markup)
    return READY

# Ready handler
async def ready(update, context):
    query = update.callback_query
    await query.answer()
    await query.message.reply_text(text="–°–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ —è –ø–µ—Ä–µ–π–¥—É –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫:)")
    await query.message.reply_text("–ü–µ—Ä–≤–æ–µ –≤—Ä–µ–º—è —Ç–µ–±–µ –±—É–¥–µ—Ç —Ç—è–∂–µ–ª–æ, –Ω–æ —ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —ç—Ç–∞–ø –æ–±—É—á–µ–Ω–∏—è, —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –æ–±—â–∞—Ç—å—Å—è —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥–∫–æ! –ì–ª–∞–≤–Ω–æ–µ –Ω–µ –∑–∞–±—Ä–∞—Å—ã–≤–∞–π –Ω–∞—à–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã.")
    keyboard = [[InlineKeyboardButton("LETSGOOO", callback_data='letsgo')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.message.reply_text("–î–µ—Ç–∏ —É—á–∞—Ç —è–∑—ã–∫ –Ω–µ –∑–Ω–∞—è –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –∏ —É –Ω–∏—Ö –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–ø—Ä–æ—Å–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥–∞ üôÇ", reply_markup=reply_markup)
    return LETSGO

# Letsgo handler
async def letsgo(update, context):
    query = update.callback_query
    await query.answer()
    await query.message.reply_text(text="Hey! My Russian Alter-EGO explained you the basics. Now let's talk. Tell me about yourself?")
    # This is the end of the conversation flow. You might want to set a different state or end the conversation.
    return ConversationHandler.END


# Conversation handler setup
conversation_handler = ConversationHandler(
    entry_points=[CommandHandler('start', start)],
    states={
        GREET: [CallbackQueryHandler(greet, pattern='^greet$')],
        COOL: [CallbackQueryHandler(cool, pattern='^cool$')],
        UNDERSTOOD: [CallbackQueryHandler(understood, pattern='^understood$')],
        READY: [CallbackQueryHandler(ready, pattern='^ready$')],
        LETSGO: [CallbackQueryHandler(letsgo, pattern='^letsgo$')]
    },
    fallbacks=[CommandHandler('start', start)]
)
